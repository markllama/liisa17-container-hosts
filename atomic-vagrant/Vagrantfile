# -*- mode: ruby -*-
# # vi: set ft=ruby :

require 'yaml'
require './provision_etcd'

settings = YAML.load_file 'config.yml'

$box_name = "atomic-fedora26"
$instance_name_prefix = "atomic"
$num_instances = 3
$configure_etcd = false
$configure_flanneld = false

data = {
  'hosts' => {
    'atomic-01' => { 'ipaddr' => '172.17.8.101' },
    'atomic-02' => { 'ipaddr' => '172.17.8.102' },
    'atomic-03' => { 'ipaddr' => '172.17.8.103' },
  }
}

File.open("hosts.yml", "w") {|f| f.write(data.to_yaml) }

Vagrant.configure("2") do |config|

  # Every Vagrant virtual environment requires a box to build off of.
  config.vm.box = "atomic-f26" 
  config.vm.box_url = "https://dl.fedoraproject.org/pub/fedora/linux/releases/26/CloudImages/x86_64/images/Fedora-Atomic-Vagrant-26-1.5.x86_64.vagrant-virtualbox.box"

  config.vm.synced_folder ".", "/vagrant", disabled: true

  # always use Vagrants insecure key
  config.ssh.insert_key = false
  # forward ssh agent to easily ssh into the different machines
  config.ssh.forward_agent = true


  (1..$num_instances).each do |i|
    config.vm.define vm_name = "%s-%02d" % [$instance_name_prefix, i] do |config|

      config.vm.provider :virtualbox do |vb|
        vb.gui = false
        vb.memory = 1024
        vb.cpus = 1
        vb.customize ["modifyvm", :id, "--cpuexecutioncap", "100"]
        vb.customize ["modifyvm", :id, "--audio", "none"]
        vb.customize ["modifyvm", :id, "--vram", "1"]
      end
      
      config.vm.hostname = vm_name
      ip = data['hosts'][vm_name]['ipaddr']
      config.vm.network :private_network, ip: ip

      forward_cockpit(config.vm, i)
      
      enable_eth1(config.vm)

      if $configure_etcd
        configure_etcd(config.vm, i)
        if $configure_flanneld
          configure_flanneld(config.vm, i)
        end
      end
      
    end
  end
end
